// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int       @id @default(autoincrement())
  username    String    @unique
  email       String    @unique
  password    String
  name        String?
  role        Role      @default(CUSTOMER)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  products    Product[] @relation("SellerProducts")
  orders      Order[]   @relation("CustomerOrders")
  addresses   Address[]
}

model Address {
  id          Int      @id @default(autoincrement())
  street      String
  city        String
  state       String
  postalCode  String
  country     String
  userId      Int
  user        User     @relation(fields: [userId], references: [id])
}

model Product {
  id          Int       @id @default(autoincrement())
  imageUrl    String?
  name        String
  description String?
  price       Float
  stock       Int
  brand       String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  sellerId    Int
  seller      User      @relation("SellerProducts", fields: [sellerId], references: [id])
  categoryId  Int
  category    Category  @relation(fields: [categoryId], references: [id])
  orderItems  OrderItem[]
}

model Category {
  id          Int       @id @default(autoincrement())
  name        String    @unique
  description String?
  products    Product[]
}

model Order {
  id          Int         @id @default(autoincrement())
  totalAmount Float
  status      OrderStatus @default(PENDING)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  customerId  Int
  customer    User        @relation("CustomerOrders", fields: [customerId], references: [id])
  orderItems  OrderItem[]
}

model OrderItem {
  id          Int     @id @default(autoincrement())
  quantity    Int
  price       Float
  orderId     Int
  order       Order   @relation(fields: [orderId], references: [id])
  productId   Int
  product     Product @relation(fields: [productId], references: [id])
}

enum Role {
  ADMIN
  SELLER
  CUSTOMER
}

enum OrderStatus {
  PENDING
  PROCESSING
  SHIPPED
  DELIVERED
  CANCELLED
}